services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: waskita_db
    environment:
      POSTGRES_DB: waskita_prod
      POSTGRES_USER: waskita_user
      POSTGRES_PASSWORD: waskita_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - waskita_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: waskita_redis
    ports:
      - "6379:6379"
    networks:
      - waskita_network
    restart: unless-stopped

  # Waskita Application
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: waskita_app
    env_file:
      - .env.docker
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://waskita_user:waskita_password@db:5432/waskita_prod
      - SECRET_KEY=waskita-docker-secret-key-2024-production-change-this
      - REDIS_URL=redis://redis:6379/0
      # Model paths for container (models are now included in the image)
      - WORD2VEC_MODEL_PATH=/app/models/embeddings/wiki_word2vec_csv_updated.model
      - NAIVE_BAYES_MODEL1_PATH=/app/models/navesbayes/naive_bayes_model1.pkl
      - NAIVE_BAYES_MODEL2_PATH=/app/models/navesbayes/naive_bayes_model2.pkl
      - NAIVE_BAYES_MODEL3_PATH=/app/models/navesbayes/naive_bayes_model3.pkl
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      # Removed models volume mapping - models are now in container
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    # Initialize admin user on first run
    command: >
      sh -c "python /app/create_admin.py && python app.py"
    networks:
      - waskita_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: waskita_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
      - ./ssl:/etc/nginx/ssl  # For SSL certificates
    depends_on:
      - web
    networks:
      - waskita_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  waskita_network:
    driver: bridge